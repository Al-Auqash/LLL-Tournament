{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programming\\\\LLL-Tournament\\\\client\\\\src\\\\components\\\\dashboard\\\\subDashboard\\\\gameServer\\\\editServer.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./editServer.css\";\nimport { withRouter } from \"react-router-dom\"; // export default class editServer extends Component {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass editServer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // _id : \"\",\n      gameServer: \"\",\n      gaemServerAlias: \"\"\n    };\n    this.editServer = this.editServer.bind(this);\n    this.handleFieldChange = this.handleFieldChange.bind(this);\n  }\n\n  componentDidMount() {\n    axios // .get(\"http://localhost:5000/gameServer/api/\" + this.state._id)\n    // .get(\"http://localhost:5000/gameServer/api/${this.props.match.params.id}\")\n    .get(\"http://localhost:5000/gameServer/api/\" + this.props.match.params.id).then(response => {\n      this.setState({\n        // currentgameServer: response.data,\n        gameServer: response.data.gameServer,\n        gameServerAlias: response.data.gameServerAlias\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  editServer(event) {\n    event.preventDefault(); // const id = this.props.params;\n\n    const newgameServer = {\n      gameServer: this.state.gameServer,\n      gameServerAlias: this.state.gameServerAlias\n    };\n    axios.put(\"http://localhost:5000/gameServer/api/\" + this.props.match.params.id, newgameServer).then(response => {\n      console.log(response);\n      window.location.href = \"/dashboard/gameServer\"; // alert(\"gameServer created!\");\n    }).catch(error => {\n      console.log(error);\n    }); // this.setState({\n    //   name: \"\",\n    //   status: \"\",\n    //   prize: \"\",\n    //   game: \"\",\n    //   region: \"\",\n    // });\n  }\n\n  handleFieldChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    }); // var newState = {};\n    // newState[e.target.name] = e.target.value;\n    // this.setState(newState);\n  }\n\n  render() {\n    // const { currentgameServer } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"titleContent\",\n        children: \"Edit Game Server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.editServer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editServerInputGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Game Server Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            autoComplete: \"off\",\n            type: \"text\",\n            name: \"gameServer\",\n            value: this.state.gameServer,\n            onChange: this.handleFieldChange,\n            className: \"serverEditInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editServerInputGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Game Server Alias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            autoComplete: \"off\",\n            type: \"text\",\n            name: \"gameServerAlias\",\n            value: this.state.gameServerAlias,\n            onChange: this.handleFieldChange,\n            className: \"serverEditInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"editServerButton\",\n          type: \"submit\",\n          name: \"editServer\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default withRouter(editServer);","map":{"version":3,"sources":["F:/Programming/LLL-Tournament/client/src/components/dashboard/subDashboard/gameServer/editServer.js"],"names":["React","Component","axios","withRouter","editServer","constructor","props","state","gameServer","gaemServerAlias","bind","handleFieldChange","componentDidMount","get","match","params","id","then","response","setState","data","gameServerAlias","catch","error","console","log","event","preventDefault","newgameServer","put","window","location","href","e","target","name","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./editServer.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// export default class editServer extends Component {\r\nclass editServer extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         // _id : \"\",\r\n         gameServer: \"\",\r\n         gaemServerAlias: \"\",\r\n      };\r\n\r\n      this.editServer = this.editServer.bind(this);\r\n      this.handleFieldChange = this.handleFieldChange.bind(this);\r\n   }\r\n\r\n   componentDidMount() {\r\n      axios\r\n         // .get(\"http://localhost:5000/gameServer/api/\" + this.state._id)\r\n         // .get(\"http://localhost:5000/gameServer/api/${this.props.match.params.id}\")\r\n         .get(\r\n            \"http://localhost:5000/gameServer/api/\" + this.props.match.params.id\r\n         )\r\n         .then((response) => {\r\n            this.setState({\r\n               // currentgameServer: response.data,\r\n               gameServer: response.data.gameServer,\r\n               gameServerAlias: response.data.gameServerAlias,\r\n            });\r\n         })\r\n         .catch((error) => {\r\n            console.log(error);\r\n         });\r\n   }\r\n\r\n   editServer(event) {\r\n      event.preventDefault();\r\n      // const id = this.props.params;\r\n      const newgameServer = {\r\n         gameServer: this.state.gameServer,\r\n         gameServerAlias: this.state.gameServerAlias,\r\n      };\r\n      axios\r\n         .put(\r\n            \"http://localhost:5000/gameServer/api/\" +\r\n               this.props.match.params.id,\r\n            newgameServer\r\n         )\r\n         .then((response) => {\r\n            console.log(response);\r\n            window.location.href = \"/dashboard/gameServer\";\r\n            // alert(\"gameServer created!\");\r\n         })\r\n         .catch((error) => {\r\n            console.log(error);\r\n         });\r\n\r\n      // this.setState({\r\n      //   name: \"\",\r\n      //   status: \"\",\r\n      //   prize: \"\",\r\n      //   game: \"\",\r\n      //   region: \"\",\r\n      // });\r\n   }\r\n\r\n   handleFieldChange(e) {\r\n      this.setState({\r\n         [e.target.name]: e.target.value,\r\n      });\r\n      // var newState = {};\r\n      // newState[e.target.name] = e.target.value;\r\n      // this.setState(newState);\r\n   }\r\n\r\n   render() {\r\n      // const { currentgameServer } = this.state;\r\n      return (\r\n         <div>\r\n            <h1 className=\"titleContent\">Edit Game Server</h1>\r\n            <form onSubmit={this.editServer}>\r\n               <div className=\"editServerInputGroup\">\r\n                  <label>Game Server Name</label>\r\n                  <input\r\n                     autoComplete=\"off\"\r\n                     type=\"text\"\r\n                     name=\"gameServer\"\r\n                     value={this.state.gameServer}\r\n                     onChange={this.handleFieldChange}\r\n                     className=\"serverEditInput\"\r\n                  />\r\n               </div>\r\n               <div className=\"editServerInputGroup\">\r\n                  <label>Game Server Alias</label>\r\n                  <input\r\n                     autoComplete=\"off\"\r\n                     type=\"text\"\r\n                     name=\"gameServerAlias\"\r\n                     value={this.state.gameServerAlias}\r\n                     onChange={this.handleFieldChange}\r\n                     className=\"serverEditInput\"\r\n                  />\r\n               </div>\r\n               <button\r\n                  className=\"editServerButton\"\r\n                  type=\"submit\"\r\n                  name=\"editServer\"\r\n               >\r\n                  Edit\r\n               </button>\r\n            </form>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default withRouter(editServer);\r\n"]},"metadata":{},"sourceType":"module"}